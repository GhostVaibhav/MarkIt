name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Getting prerequisites
      run: |
        sudo apt install g++
        sudo apt install libcurl4-openssl-dev
        sudo apt-get install libncurses5-dev libncursesw5-dev
        sudo apt install cmake
    - name: Building on Ubuntu
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
    - name: Building on Debian
      run: |
        docker pull debian
        docker run -d -t --name test1 debian
        docker exec -it test1 bash
        apt update
        apt -y install g++
        apt -y install libcurl4-openssl-dev
        apt-get -y install libncurses5-dev libncursesw5-dev
        apt -y install git
        apt -y install cmake
        git clone https://github.com/GhostVaibhav/Todo.git
        cd Todo
        mkdir build
        cd build
        cmake ..
        cmake --build .
    - name: Building on Alpine
      run: |
        docker pull alpine
        docker run -d -t --name test2 alpine
        docker exec -it test2 sh
        apk update
        apk upgrade
        apk add g++
        apk add curl-dev
        apk add ncurses-dev
        apk add git
        apk add cmake
        apk add make
        git clone https://github.com/GhostVaibhav/Todo.git
        cd Todo
        mkdir build
        cd build
        cmake ..
        cmake --build .
    - name: Building on Arch Linux
      run: |
        docker pull archlinux
        docker run -d -t --name test3 archlinux
        docker exec -it test3 bash
        pacman -Syy --noconfirm
        pacman -Syu --noconfirm
        pacman -Sy gcc --noconfirm
        pacman -S curl --noconfirm
        pacman -S ncurses --noconfirm
        pacman -S git --noconfirm
        pacman -S cmake --noconfirm
        pacman -S make --noconfirm
        git clone https://github.com/GhostVaibhav/Todo.git
        cd Todo
        mkdir build
        cd build
        cmake ..
        cmake --build .
    - name: Building on CentOS
      run: |
        docker pull centos
        docker run -d -t --name test4 centos
        docker exec -it test4 bash
        yum -y update
        yum -y group install "Development Tools"
        yum -y install libcurl --allowerasing
        yum -y install curl-devel
        yum -y install ncurses-devel
        yum -y install cmake
        git clone https://github.com/GhostVaibhav/Todo.git
        cd Todo
        mkdir build
        cd build
        cmake ..
        cmake --build .
    - name: Building on Fedora Linux
      run: |
        docker pull fedora
        docker run -d -t --name test5 fedora
        docker exec -it test5 bash
        dnf -y upgrade
        dnf -y install git
        dnf -y install gcc-c++
        dnf -y install libcurl-devel
        dnf -y install ncurses-devel
        dnf -y install cmake
        git clone https://github.com/GhostVaibhav/Todo.git
        cd Todo
        mkdir build
        cd build
        cmake ..
        cmake --build .
        
  Windows:
  
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Getting prerequisites for building on MinGW
      run: |
        start prereq.bat 1
        exit
    - name: Getting prerequisites for building on Visual Studio
      run: |
        start prereq.bat 2
        exit
    - name: Compiling the build file
      run: |
        g++ build.cpp -o build
    - name: Compiling and linking the main file
      run: |
        start build.exe main
        exit
  
  MacOS:
  
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Installing prerequisites
      run: |
        brew install gcc
        brew install make
        brew install curl
        brew install ncurses
        brew install cmake
        brew tap nlohmann/json
        brew install nlohmann-json
    - name: Building and compiling the build file using CMake
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
