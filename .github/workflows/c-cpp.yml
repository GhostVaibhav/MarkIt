name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Getting prerequisites
      run: |
        sudo apt -y install g++
        sudo apt -y install libcurl4-openssl-dev
        sudo apt-get -y install libncurses5-dev libncursesw5-dev
        sudo apt -y install cmake
    - name: Building on Ubuntu
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
    - name: Building on Debian
      run: |
        cd .github/workflows/Debian
        docker build -t test-debian .
        docker run test-debian
        cd ..
    - name: Building on Arch Linux
      run: |
        cd .github/workflows/Archlinux
        docker build -t test-arch .
        docker run test-arch
        cd ..
    - name: Building on CentOS
      run: |
        cd .github/workflows/CentOS
        docker build -t test-centos .
        docker run test-centos
        cd ..
    - name: Building on Fedora Linux
      run: |
        cd .github/workflows/Fedora
        docker build -t test-fedora .
        docker run test-fedora
        cd ..
    - name: Building on openSUSE Leap
      run: |
        cd .github/workflows/openSUSE-leap
        docker build -t test-leap .
        docker run test-leap
        cd ..
    - name: Building on openSUSE Tumbleweed
      run: |
        cd .github/workflows/openSUSE-tumbleweed
        docker build -t test-tumbleweed .
        docker run test-tumbleweed
        cd ..
    - name: Building on Kali Linux
      run: |
        cd .github/workflows/Kali
        docker build -t test-kali .
        docker run test-kali
        cd ..
  Alpine:
    runs-on: ubuntu-latest
    container: alpine
    steps:
      - uses: actions/checkout@v2
      - name: Building application
        run: | 
          apk update
          apk upgrade
          apk add g++ ncurses-dev curl-dev git cmake make
          git clone https://github.com/GhostVaibhav/Todo.git
          cd Todo
          mkdir build
          cd build
          cmake ..
          cmake --build .
        
  Windows:
  
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Getting prerequisites for building on MinGW
      run: |
        start prereq.bat 1
        exit
    - name: Getting prerequisites for building on Visual Studio
      run: |
        start prereq.bat 2
        exit
    - name: Compiling the build file
      run: |
        g++ build.cpp -o build
    - name: Compiling and linking the main file
      run: |
        start build.exe main
        exit
  
  MacOS:
  
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Installing prerequisites
      run: |
        brew install gcc
        brew install make
        brew install curl
        brew install ncurses
        brew install cmake
        brew tap nlohmann/json
        brew install nlohmann-json
    - name: Building and compiling the build file using CMake
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
