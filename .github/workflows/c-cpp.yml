name: C/C++ CI

on:
  push:
    branches: 
    - master
    paths:
    - '**.cpp'
    - '**.h'
    - '**.hpp'
    - '**.bat'
    - '**.txt'
    - '.github/workflows/**'
    - '!.vscode**'
    - '!**.md'
    - '!LICENSE'
    - '!CNAME'
  pull_request:
    branches:
    - master

jobs:
  Ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Getting prerequisites
      run: |
        sudo apt update
        sudo apt upgrade
        sudo apt -y install g++ cmake libcurl4-openssl-dev libncurses5-dev libncursesw5-dev
    - name: Building application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
  
  Debian:
    runs-on: ubuntu-latest
    container: debian
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Getting prerequisites
        run: |
          apt update && apt -y install g++ libcurl4-openssl-dev libncurses5-dev libncursesw5-dev git cmake
      - name: Building application
        run: | 
          git clone https://github.com/GhostVaibhav/Todo.git && cd Todo && mkdir build && cd build && cmake .. && cmake --build .


  Arch-Linux:
    runs-on: ubuntu-latest
    container: archlinux
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Getting prerequisites
        run: |
          pacman -Syy --noconfirm
          pacman -Syu --noconfirm
          pacman -Sy gcc --noconfirm
          pacman -S curl ncurses git cmake make --noconfirm
      - name: Building application
        run: | 
          git clone https://github.com/GhostVaibhav/Todo.git
          cd Todo
          mkdir build
          cd build
          cmake ..
          cmake --build .

  CentOS:
    runs-on: ubuntu-latest
    container: centos
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Getting prerequisites
        run: |
          yum -y update
          yum -y group install "Development Tools"
          yum -y install libcurl --allowerasing
          yum -y install curl-devel ncurses-devel cmake
      - name: Building application
        run: | 
          git clone https://github.com/GhostVaibhav/Todo.git
          cd Todo
          mkdir build
          cd build
          cmake ..
          cmake --build .

  Fedora-Linux:
    runs-on: ubuntu-latest
    container: fedora
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Getting prerequisites
        run: |
          dnf -y upgrade
          dnf -y install git gcc-c++ libcurl-devel ncurses-devel cmake
      - name: Building application
        run: | 
          git clone https://github.com/GhostVaibhav/Todo.git
          cd Todo
          mkdir build
          cd build
          cmake ..
          cmake --build .

  OpenSUSE-Leap:
    runs-on: ubuntu-latest
    container: opensuse/leap
    steps:
      - name: Getting prerequisites
        run: |
          zypper refresh
          zypper update -y
          zypper install -y gcc-c++ libcurl-devel ncurses-devel cmake git
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Building application
        run: | 
          git clone https://github.com/GhostVaibhav/Todo.git
          cd Todo
          mkdir build
          cd build
          cmake ..
          cmake --build .

  OpenSUSE-Tumbleweed:
    runs-on: ubuntu-latest
    container: opensuse/tumbleweed
    steps:
      - name: Getting prerequisites
        run: |
          zypper refresh
          zypper update -y
          zypper install -y gcc-c++ libcurl-devel ncurses-devel cmake git
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Building application
        run: | 
          git clone https://github.com/GhostVaibhav/Todo.git
          cd Todo
          mkdir build
          cd build
          cmake ..
          cmake --build .
  
  Kali-Linux:
    runs-on: ubuntu-latest
    container: kalilinux/kali-rolling
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Getting prerequisites
        run: |
          apt -y update
          apt -y upgrade
          apt -y install g++ libcurl4-openssl-dev libncurses5-dev libncursesw5-dev cmake git
      - name: Building application
        run: | 
          git clone https://github.com/GhostVaibhav/Todo.git
          cd Todo
          mkdir build
          cd build
          cmake ..
          cmake --build .

  Alpine:
    runs-on: ubuntu-latest
    container: alpine
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Getting prerequisites
        run: |
          apk update
          apk upgrade
          apk add g++ ncurses-dev curl-dev git cmake make
      - name: Building application
        run: | 
          git clone https://github.com/GhostVaibhav/Todo.git
          cd Todo
          mkdir build
          cd build
          cmake ..
          cmake --build .
        
  Windows:
  
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true
    - name: Building the dependencies for MinGW G++ compiler
      run: |
        mkdir builds && cd builds
        cmake .. -G "MinGW Makefiles" -DCOMPILE=0
    - name: Compiling the main project for MinGW G++ compiler
      run: |
        cd builds
        cmake .. -G "MinGW Makefiles" -DCOMPILE=1
        copy "MarkIt.exe" "bin\"
        cd bin
        MarkIt --version classic
    - name: Building the dependencies for MSVC compiler
      run: |
        mkdir build && cd build
        cmake .. -G "Microsoft Visual Studio 2019" -DCOMPILE=0
    - name: Compiling the main project for MSVC compiler
      run: |
        cd build
        cmake .. -G "Microsoft Visual Studio 2019" -DCOMPILE=1
        copy "MinSizeRel\MarkIt.exe" "bin\"
        cd bin
        MarkIt --version classic
  
  MacOS:
  
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true
    - name: Installing prerequisites
      run: |
        brew install gcc
        brew install make
        brew install curl
        brew install ncurses
        brew install cmake
        brew tap nlohmann/json
        brew install nlohmann-json
    - name: Building and compiling the build file using CMake in Apple Clang
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
    - name: Building and compiling using CMake as Xcode Project
      run: |
        mkdir builds
        cd builds
        cmake .. -G "Xcode"
        cmake --build . --config MinSizeRel
